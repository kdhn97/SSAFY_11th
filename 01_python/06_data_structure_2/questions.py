''' 질문 1 : 해시함수 생성 구조 관련 질의
함수의 특징 중 하나는 인자값이 동일하면 동일한 데이터를 반환해야 되는 걸로 알고 있습니다. 즉 함수와 인자값이 변하지 않으면 리턴되는 값이 동일하다고 이해했습니다. 하지만, 아래 코드와 같이 인자값이 정수인 경우 해시함수의 리턴값이 변하지 않으나, 문자열이 인자값인 경우 `실행될 때마다` 리턴값이 변경됩니다. 그러면 저는 아래와 같이 의문이 들고 있습니다. 
- 즉, 해시함수는 실행될 때마다 새로 생성이 되는건지 궁금합니다.(인자값은 같은데 리턴값이 다르니까요)
'''
# 첫번째 실행
print(hash(1)) # 결과값 :1
print(hash('a')) # 결과값 : -1516257500459072077
print(hash('a')) # 결과값 : -1516257500459072077

# 두번째 실행
print(hash(1)) # 결과값 :1
print(hash('a')) # 결과값 : -437062809495447606
print(hash('a')) # 결과값 : -437062809495447606

'''질문 2 : 해시값 -> 해시테이블의 값을 탐색하는 로직 관련
- 만약 1번 질의처럼 해시함수가 새로 생성이 된다면 매번 전달되는 해시값이 다른데, Dictionary같은 경우는 어떻게 키에 해당되는 값을 바로 찾아오는 건지??
※ 보충설명
  1) 내가 생각하는 딕셔너리 탐색 구조  
  [해시함수에 동일한 문자열 인자값 'a' 전달 -> 고유한 키인 '해시값' 도출 -> 해시테이블에 고유한 해시값에 해당되는 데이터를 반환]
  2) 위 과정에서 실행 시마다 해시값이 변동된다면 해시테이블에서 해시값에 해당되는 데이터를 찾을 때, 어떻게 매번 동일한 데이터를 계속 반환할 수 있게 되는지 궁금합니다. (아래 코드 참조)
'''
# 가정 : 아래 코드를 두번 실행
my_dict = {'a':1} 
print(my_dict['a'])  

'''질문 3 : 리턴값이 고정된 길이의 데이터인 이유?
- 해시함수가 가변적인 길이의 데이터를 고정된 길이의 데이터로 반환해주는 함수라고 했습니다. 반드시 고정적인 길이의 데이터로 반환하는 주된 이유가 궁금합니다. 빠른 탐색을 위함인지, 보안이슈 때문인지 궁금합니다!
'''